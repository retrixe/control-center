name: Build CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-daemon:
    name: Build daemon
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    defaults:
      run:
        working-directory: ./daemon
    steps:
    - name: Set up Go 1.17
      uses: actions/setup-go@v2
      with:
        go-version: ^1.17
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      name: Cache Go dependencies and build cache
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies on Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends build-essential libgl1-mesa-dev xorg-dev
      if: ${{ success() && matrix.os == 'ubuntu-18.04' }}

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
#        if [ -f Gopkg.toml ]; then
#            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#            dep ensure
#        fi

    - name: Build
      run: sh build.sh

    - name: Test
      run: go test -v .

    - name: Upload binary as build artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() && matrix.os == 'ubuntu-18.04' }}
      with:
        # Artifact name
        name: daemon # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: daemon/control-center
        # The desired behavior if no files are found using the provided path.

  build-app:
    name: Build app
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    defaults:
      run:
        working-directory: ./app
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: stable

    - name: Enable Flutter Linux support
      run: flutter config --enable-linux-desktop

    - name: Get dependencies
      run: |
        sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev
        flutter pub get

#    - name: Run tests
#      run: flutter test

    - name: Build
      run: flutter build linux

    - name: Upload binary as build artifact
      uses: actions/upload-artifact@v2
      if: ${{ success() && matrix.os == 'ubuntu-18.04' }}
      with:
        # Artifact name
        name: app # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: app/build/linux/x64/release/bundle
        # The desired behavior if no files are found using the provided path.

  build-snap:
    name: Build snap
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - uses: snapcore/action-build@v1
      name: Build snap
      id: snapcraft

    - uses: actions/upload-artifact@v2
      name: Upload snap as build artifact
      with:
        name: snap
        path: ${{ steps.snapcraft.outputs.snap }}
